import java.util.Random;

enum SwarmlingState implements State
{
	Attack {
		public void act(Unit u)
		{
			
		}
	},
	Roam {
		public void act(Unit u)
		{
			//TO DO : Si ennemi proche, on change pour Attack
			Vector2 newGoal = new Vector2();
			Random rand = new Random();
			newGoal.setX(u.getGoal().getX() + (rand.nextInt(4) - 2));
			newGoal.setY(u.getGoal().getY() + (rand.nextInt(4) - 2));
			u.setGoal(newGoal);
		}
	},
	GoingTo {
		public void act(Unit u)
		{
			if (u.getPos() == u.getGoal())
				((Swarmling)u).changeState(Roam);
			else
				u.moveTo(u.getGoal());
		}
	},
	Gather {
		public void act(Unit u)
		{
			
		}
	}
}

public class Swarmling extends Unit{
	
	private Swarmide boss;
	private SwarmlingState state;
	
	Swarmling(Vector2 pos)
	{
		super(pos);
		unitType = "Swarmling";
		speed = 2.0f;
	}
	
	public void changeState(SwarmlingState newState)
	{
		state = newState;
	}

	@Override
	protected void checkMessages() {
		if (!boiteMessages.isEmpty())
		{
			Message m = boiteMessages.remove();
			System.out.println("Swarmling received message - " + m.type.toString());
		}
		
	}

	@Override
	protected void act() {
		state.act(this);
		
	}

	@Override
	protected void receiveMessage(Message m) {
		boiteMessages.add(m);
		
	}

}
